//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ForumService
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ForumEntities : DbContext
    {
        public ForumEntities()
            : base("name=ForumEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Ansver> Ansver { get; set; }
        public virtual DbSet<Qwery> Qwery { get; set; }
        public virtual DbSet<OneUser> OneUser { get; set; }
    
        [DbFunction("ForumEntities", "GetAllUsers")]
        public virtual IQueryable<GetAllUsers_Result> GetAllUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetAllUsers_Result>("[ForumEntities].[GetAllUsers]()");
        }
    
        [DbFunction("ForumEntities", "GetCategoryList")]
        public virtual IQueryable<GetCategoryList_Result> GetCategoryList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetCategoryList_Result>("[ForumEntities].[GetCategoryList]()");
        }
    
        [DbFunction("ForumEntities", "GetUserPassword")]
        public virtual IQueryable<GetUserPassword_Result> GetUserPassword(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetUserPassword_Result>("[ForumEntities].[GetUserPassword](@name)", nameParameter);
        }
    
        public virtual int RegisterUser(string name, string password, byte[] foto, Nullable<int> age, Nullable<int> rating, Nullable<int> ratingAnswers, Nullable<int> ratingQwery, string about)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("foto", foto) :
                new ObjectParameter("foto", typeof(byte[]));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("rating", rating) :
                new ObjectParameter("rating", typeof(int));
    
            var ratingAnswersParameter = ratingAnswers.HasValue ?
                new ObjectParameter("ratingAnswers", ratingAnswers) :
                new ObjectParameter("ratingAnswers", typeof(int));
    
            var ratingQweryParameter = ratingQwery.HasValue ?
                new ObjectParameter("ratingQwery", ratingQwery) :
                new ObjectParameter("ratingQwery", typeof(int));
    
            var aboutParameter = about != null ?
                new ObjectParameter("about", about) :
                new ObjectParameter("about", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegisterUser", nameParameter, passwordParameter, fotoParameter, ageParameter, ratingParameter, ratingAnswersParameter, ratingQweryParameter, aboutParameter);
        }
    }
}
